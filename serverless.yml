org: acomosus
app: comosus-serverless
service: comosus-serverless
frameworkVersion: "3"

custom:
  environment:
    SENDGRID_API_KEY: ahu1o2nfaduonekofleqan
    GITHUB_PAT: asdnuioqregn1asnfjoa
    SENDGRID_API: asnufoqnetguroanjdfo
  fileUploadBucket: a-comosus-avatar-bucket

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-2
  apiGateway:
    binaryMediaTypes:
      - "multipart/form-data"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: "*"

functions:
  send-email:
    handler: functions/sendEmail/index.sendEmail
    events:
      - httpApi:
          path: /send-email
          method: post
    environment:
      SENDGRID_API_KEY: ${self:custom.environment.SENDGRID_API_KEY}

  send-email-v2:
    handler: functions/sendEmailV2/index.sendEmail
    events:
      - httpApi:
          path: /send-email-v2
          method: post
    environment:
      SENDGRID_API_KEY: ${self:custom.environment.SENDGRID_API}

  uploadFile:
    handler: functions/uploadFile/index.uploadFile
    events:
      - httpApi:
          path: /file-upload
          method: post
    environment:
      BUCKET: ${self:custom.fileUploadBucket}

  deleteFile:
    handler: functions/deleteFile/index.deleteFile
    events:
      - httpApi:
          path: /file-upload
          method: delete
    environment:
      BUCKET: ${self:custom.fileUploadBucket}

  get-project-info:
    handler: functions/getProjectInfo/index.handler
    environment:
      GITHUB_PAT: ${self:custom.environment.GITHUB_PAT}
    events:
      - httpApi:
          path: /project-info
          method: get

resources:
  Resources:
    FileUploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.fileUploadBucket}
        AccessControl: PublicRead

plugins:
  - serverless-plugin-typescript
  - serverless-offline
